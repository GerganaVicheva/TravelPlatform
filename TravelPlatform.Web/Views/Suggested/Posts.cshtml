@model IEnumerable<TravelPlatform.ViewModels.SuggestedPostsViewModel>

@{
	ViewData["Title"] = User.IsInRole("Administrator") ? "Moderate Posts" : "Suggested Posts";
}

@section Styles {
	<link href="~/css/suggested-posts.css" rel="stylesheet" asp-append-version="true" />
}

<div class="d-flex align-items-center justify-content-between">
	<h2 class="sugg-h2 mb-4">@(User.IsInRole("Administrator") ? "Moderate Posts" : "Suggested Posts")</h2>

	<form method="get" asp-area="" asp-controller="Suggested" asp-action="Posts" class="mb-2 d-flex" style="margin-right: 184px;">
		<input type="text" name="searchTerm"
			   value="@Context.Request.Query["searchTerm"]"
			   placeholder="Search posts..."
			   class="form-control d-inline-block me-2"
			   style="width: 300px;" />

		<select name="country" id="countryDropdown" class="form-select me-2" style="width: 150px;">
			<option value="">All Countries</option>
			@foreach (var country in ViewBag.Countries as List<string>)
			{
				<option value="@country" selected="@(country == Context.Request.Query["country"])">@country</option>
			}
		</select>

		<select name="town" id="townDropdown" class="form-select me-2" style="width: 150px;">
			<option value="">All Towns</option>
			@if (ViewBag.Towns != null)
			{
				foreach (var town in ViewBag.Towns as List<string>)
				{
					<option value="@town" selected="@(town == Context.Request.Query["town"])">@town</option>
				}
			}
		</select>

		<button type="submit" class="btn btn-primary" style="background-color: #5196CF;">Search</button>
	</form>
</div>

<div class="row sugg-container">
	@if (Model == null || !Model.Any())
	{
		<p class="no-profiles ms-3 mt-0" style="color: var(--brown); font-size: 16px; padding-bottom: 545px;">There are no suggested posts yet. Come back to check later!</p>
	}
	else
	{
		@foreach (var post in Model)
		{
			<div class="col-md-4 mb-4">
				<div class="card h-100 shadow-sm">
					@if (post.ImageUrl == null)
					{
						<img src="/images/place.jpg" alt="Post Image" />
					}
					else
					{

						<img src="@post.ImageUrl" class="card-img-top" alt="Post image" style="height: 200px; object-fit: cover;" />
					}
					<div class="card-body">
						<h5 class="card-title">@post.Title</h5>
						<h6 class="card-subtitle mb-2 text-muted">by @post.Username</h6>
						<p class="card-text">@post.ShortDescription</p>

						<div class="card-footer-section d-flex justify-content-between align-items-center text-muted small mb-2">
							<span><i class="bi bi-heart"></i> @post.LikesCount likes</span>
							<span><i class="bi bi-chat"></i> @post.CommentsCount comments</span>

							<a href="/UserAccount/Index?userId=@post.UserId&highlightPost=@post.PostId" class="btn btn-outline-primary btn-sm">View Post</a>
						</div>

					</div>
				</div>
			</div>
		}
	}
</div>


@section Scripts {
	<script>
		const postsDestinations = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
			Model.Select(p => p.Destination).DistinctBy(d => new { d.Country, d.Town })
		));

		document.getElementById("countryDropdown").addEventListener("change", function () {
			let country = this.value;
			let townDropdown = document.getElementById("townDropdown");

			townDropdown.innerHTML = '<option value="">All Towns</option>'; // reset towns

			if (country) {
				const towns = [...new Set(
					postsDestinations
						.filter(d => d.Country === country)
						.map(d => d.Town)
				)];

				towns.forEach(t => {
					let option = document.createElement("option");
					option.value = t;
					option.textContent = t;
					townDropdown.appendChild(option);
				});
			}
		});
	</script>
}
